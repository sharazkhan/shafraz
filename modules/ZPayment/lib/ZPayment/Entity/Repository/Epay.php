<?php

/**
 * ZSELEX.
 *
 * @copyright R2International
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package ShopProducts
 * @author R2International <R2International>.
 * @link http://modulestudio.de/
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.5.4 (http://modulestudio.de) at Tue Feb 07 21:56:43 IST 2012.
 */
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;
use Doctrine\ORM\QueryBuilder;
use DoctrineExtensions\Paginate\Paginate;
use Doctrine\ORM;
use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * Repository class used to implement own convenience methods for performing certain DQL queries.
 *
 * This is the base repository class for shop entities.
 */
class ZPayment_Entity_Repository_Epay extends ZSELEX_Entity_Repository_General {

    public function updateEpayPayment($status, $orderId, $transactionId, $card_number) {

        // $date = date("Y-m-d");
        $qb = $this->_em->createQueryBuilder();
        $q = $qb->update('ZPayment_Entity_Epay', 'u')
                ->set('u.status', '?1')
                ->set('u.transaction_id', '?3')
                ->set('u.card_number', '?4')
                ->where('u.order_id = ?2')
                ->setParameter(1, $status)
                ->setParameter(2, $orderId)
                ->setParameter(3, $transactionId)
                ->setParameter(4, $card_number)
                ->getQuery();
        $p = $q->execute();
        return $p;
    }

    public function getEpay($args) {
        $shop_id = $args['shop_id'];
        $dql = "SELECT a.enabled , a.test_mode , a.merchant_number , a.test_merchant_number ,a.md5_hash
                  FROM ZPayment_Entity_EpaySetting a 
                  WHERE a.shop_id = :shop_id";

        // echo $dql;

        $query = $this->_em->createQuery($dql);
        $query->setParameter('shop_id', $shop_id);
        $result = $query->getOneOrNullResult();
        //echo "<pre>";  print_r($result);   echo "</pre>";

        return $result; // hydrate result to array
    }

    public function getPaymentDetails($args) {
        $order_id = $args['order_id'];
        $dql = "SELECT a.transaction_id , a.status , a.card_number 
                  FROM ZPayment_Entity_Epay a 
                  WHERE a.order_id = :order_id";

        $query = $this->_em->createQuery($dql);
        $query->setParameter('order_id', $order_id);
        $result = $query->getOneOrNullResult();
        //echo "<pre>";  print_r($result);   echo "</pre>";

        return $result; // hydrate result to array
    }

    public function epay_orderCount($args) {
        $order_id = $args['order_id'];
        $query = $this->_em->createQuery('SELECT COUNT(u.order_id) FROM ZPayment_Entity_Epay u '
                . 'WHERE u.order_id=:order_id');
        $query->setParameter('order_id', $order_id);
        $count = $query->getSingleScalarResult();
        return $count;
    }

    public function ePayTxnCount($args) {
        $txn_id = $args['txn_id'];
        $query = $this->_em->createQuery('SELECT COUNT(u.transaction_id) '
                . 'FROM ZPayment_Entity_Epay u '
                . 'WHERE u.transaction_id=:txn_id');
        $query->setParameter('txn_id', $txn_id);
        $count = $query->getSingleScalarResult();
        return $count;
    }

    public function epay_count($args) {
        $shop_id = $args['shop_id'];
        $query = $this->_em->createQuery('SELECT COUNT(u.id) FROM ZPayment_Entity_EpaySetting u '
                . 'WHERE u.shop_id=:shop_id');
        $query->setParameter('shop_id', $shop_id);
        $count = $query->getSingleScalarResult();
        return $count;
    }

    public function updateEpaySettings($args) {
        // echo "<pre>"; print_r($args); echo "</pre>";  exit;

        $qb = $this->_em->createQueryBuilder();
        $q = $qb->update('ZPayment_Entity_EpaySetting', 'u')
                ->set('u.enabled', ':enabled')
                ->set('u.test_mode', ':test_mode')
                ->set('u.test_merchant_number', ':test_merchant_number')
                ->set('u.merchant_number', ':merchant_number')
                ->set('u.md5_hash', ':md5_hash')
                ->where('u.shop_id = :shop_id')
                ->setParameter('shop_id', $args['shop_id'])
                ->setParameter('enabled', $args['Epay_enabled'])
                ->setParameter('test_mode', $args['Epay_testmode'])
                ->setParameter('merchant_number', $args['Epay_merchant_number'])
                ->setParameter('test_merchant_number', $args['Epay_test_merchant_number'])
                ->setParameter('md5_hash', $args['Epay_md5'])
                ->getQuery();
        $p = $q->execute();
        if ($p) {
            return $p;
        }
    }

    public function get_Cards_Accepted($args) {
        $shop_id = $args['shop_id'];
        if (empty($shop_id)) {
            return array();
        }
        $dql = "SELECT a.shop_id ,  a.cards 
                  FROM ZPayment_Entity_CardsAccepted a 
                  WHERE a.shop_id = :shop_id";

        $query = $this->_em->createQuery($dql);
        $query->setParameter('shop_id', $shop_id);
        $result = $query->getOneOrNullResult();
        $sql = $query->getSql();
        return $result;
    }

    public function Cards_Accepted($args) {
        $shop_id = $args['shop_id'];
        $cards = $args['cards'];
        $cards = serialize($cards);
        $query = $this->_em->createQuery('SELECT COUNT(u.id) FROM ZPayment_Entity_CardsAccepted u '
                . 'WHERE u.shop_id=:shop_id');
        $query->setParameter('shop_id', $shop_id);
        $count = $query->getSingleScalarResult();
        if ($count) {
            $qb = $this->_em->createQueryBuilder();
            $q = $qb->update('ZPayment_Entity_CardsAccepted', 'u')
                    ->set('u.cards', '?1')
                    ->where('u.shop_id = ?2')
                    ->setParameter(1, $cards)
                    ->setParameter(2, $shop_id)
                    ->getQuery();
            $p = $q->execute();
        } else {
            $cards_entity = new ZPayment_Entity_CardsAccepted();
            $cards_entity->setShop_id($shop_id);
            $cards_entity->setCards($cards);
            $this->_em->persist($cards_entity);
            $this->_em->flush();
        }
    }

    public function paymentMode($args) {
        $shop_id = $args['shop_id'];
        $dql = "SELECT a.enabled , a.test_mode 
                  FROM ZPayment_Entity_EpaySetting a 
                  WHERE a.shop_id = :shop_id";

        //echo $dql;

        $query = $this->_em->createQuery($dql);
        $query->setParameter('shop_id', $shop_id);
        $result = $query->getOneOrNullResult();
        //echo "<pre>";  print_r($result);   echo "</pre>";

        return $result; // hydrate result to array
    }

}
