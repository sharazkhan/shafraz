<?php

/**
 * ZSELEX.
 *
 * @copyright 
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package ShopProducts
 * @author  <>.
 * @link http://modulestudio.de/
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.5.4 (http://modulestudio.de) at Tue Feb 07 21:56:43 IST 2012.
 */
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;
use Doctrine\ORM\QueryBuilder;
use DoctrineExtensions\Paginate\Paginate;
use Doctrine\ORM;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * Repository class used to implement own convenience methods for performing certain DQL queries.
 *
 * This is the base repository class for shop entities.
 */
class ZSELEX_Entity_Repository_MinisiteImageRepository extends ZSELEX_Entity_Repository_General {
	public function getImages($args) {
		try {
			$shop_id = $args ['shop_id'];
			$limit = $args ['limit'];
			$limitQuery = '';
			
			$dql = "SELECT a.file_id , a.name , a.dispname , a.filedescription
                FROM ZSELEX_Entity_MinisiteImage a
                WHERE a.shop = :shop_id AND a.status=1
                ORDER BY a.sort_order ASC";
			// echo $dql;
			$query = $this->_em->createQuery ( $dql );
			$query->setParameter ( 'shop_id', $shop_id );
			if ($limit > 0) {
				$query->setMaxResults ( $limit );
			}
			$result = $query->getArrayResult ();
			// echo "<pre>"; print_r($result); echo "</pre>";
			return $result;
		} catch ( \Exception $e ) {
			// echo 'Message: ' . $e->getMessage() . '<br>';
			// echo $query->getSQL();
			// exit;
		}
	}
	public function createImageDnd($args) {
		try {
			$item = ZSELEX_Util::purifyHtml ( $args );
			
			$shop = $this->_em->find ( 'ZSELEX_Entity_Shop', $item ['shop_id'] );
			
			$image = new ZSELEX_Entity_MinisiteImage ();
			$image->setName ( $item ['name'] );
			$image->setShop ( $shop );
			$image->setUser_id ( $item ['user_id'] );
			$image->setDispname ( $item ['dispname'] );
			$image->setStatus ( $item ['status'] );
			
			$this->_em->persist ( $image );
			$this->_em->flush ();
			
			$InsertId = $image->getFile_id ();
			$result = $InsertId;
			return $result;
		} catch ( \Exception $e ) {
			echo 'Message: ' . $e->getMessage () . '<br>';
			// echo $query->getSQL();
			exit ();
		}
	}
}
